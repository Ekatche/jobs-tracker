services:
  backend:
    container_name: jobtracker-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/.venv


    environment:
      - TEST_ENV=docker
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${DATABASE_NAME}?authSource=admin
      - DATABASE_NAME=${DATABASE_NAME}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOST=mongodb
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PATH=/app/.venv/bin:$PATH  
      - UV_CACHE_DIR=/app/.cache/uv
      - UV_LINK_MODE=copy
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network
  
  mongo_test:
    image: mongo:latest
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_TEST_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_TEST_PASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME_TEST}
    volumes:
      - mongodb_test_data:/data/db
    networks:
      - app-network

  airflow:
    container_name: jobtracker-airflow
    build:
      context: ./backend
      dockerfile: Dockerfile.airflow
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./airflow/dags:/opt/airflow/dags
      - airflow_data:/opt/airflow
      - airflow_logs:/opt/airflow/logs
      - /app/.venv

    environment:
      - TZ=Europe/Paris
      # Configuration Airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_HOME=/opt/airflow
      - AIRFLOW__CORE__TASK_HEARTBEAT_TIMEOUT=900  # 15 minutes au lieu de 5
      - AIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT=900
      - AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL=300  # 5 minutes au lieu de 30s
      - AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL=60  #
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY:-change_me}
      - AIRFLOW__CORE__PARALLELISM=2
      - AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG=1
      - AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG=1
      - AIRFLOW__WEBSERVER__WORKERS=1
      - AIRFLOW__WEBSERVER__WORKER_TIMEOUT=300
      # Variables métier
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOST=mongodb
      - DATABASE_NAME=${DATABASE_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - PATH=/root/.local/bin:/app/.venv/bin:$PATH
      - DISPLAY=:99
    deploy:
      resources:
        limits:
          memory: 5G
          cpus: '2.5'
        reservations:
          memory: 3G
          cpus: '1.5'
    command: >
      bash -c "
      echo 'Démarrage Airflow...' &&
      mkdir -p /opt/airflow/logs &&
      chmod -R 777 /opt/airflow &&
      Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      airflow standalone
      "
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v2/monitor/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

volumes:
  mongodb_data:
  airflow_data:
  airflow_logs:
  mongodb_test_data:

networks:
  app-network: